version: '3'

services:
  tsc:
    image: startprojekt/treneris-tsc:latest
    container_name: "tsc"
    networks:
      - treneris_network
    ports:
      - "8003:80"

  tsb:
    image: startprojekt/treneris-tsb:latest
    container_name: "tsb"
    environment:
      - ENVIRONMENT_MODE=production
    command: sh -c "/usr/src/entrypoint.sh"
    depends_on:
      - database
      - redis
    networks:
      - treneris_network
    ports:
      - "8002:80"

  celery-worker:
    image: startprojekt/treneris-tsb:latest
    depends_on:
      - database
      - redis
    command: celery -A ${COMPOSE_APP_NAME:-tsb} worker -l INFO
    networks:
      - treneris_network

  database:
    image: postgres:13
    networks:
      - treneris_network
    ports:
      - "${COMPOSE_POSTGRES_PORT:-5432}:5432"

  redis:
    image: redis:latest
    networks:
      - treneris_network
    ports:
      - "${COMPOSE_REDIS_PORT:-6379}:6379"

  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    depends_on:
      - tsb
      - tsc
    volumes:
      - ./data/nginx/conf.d:/etc/nginx/conf.d
      - ./data/nginx/include:/etc/nginx/include
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - treneris_network
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
networks:
  treneris_network:
